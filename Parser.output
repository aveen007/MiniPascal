Terminals which are not used

   ALPHA


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID ';' declarations subprogram_declarations compound_statement

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type
    5             | /* empty */

    6 type: standard_type
    7     | ARRAY '[' INTNUM '.' '.' INTNUM ']' OF standard_type

    8 standard_type: INTEGER
    9              | REAL
   10              | BOOLEANN

   11 subprogram_declarations: subprogram_head compound_statement

   12 subprogram_head: FUNCTION ID arguments ':' standard_type ';'
   13                | PROCEDURE ID arguments ';'

   14 arguments: '(' parameter_list ')'
   15          | /* empty */

   16 parameter_list: identifier_list ':' type
   17               | parameter_list ';' identifier_list ':' type

   18 compound_statement: BEGINN optional_statement END

   19 optional_statement: statement_list
   20                   | /* empty */

   21 statement_list: statement
   22               | statement_list ';' statement

   23 statement: variable ':' '=' expression
   24          | procedure_statement
   25          | compound_statement
   26          | IF expression THEN statement
   27          | IF expression THEN statement ELSE statement
   28          | WHILE expression DO statement

   29 variable: ID
   30         | ID '[' expression ']'

   31 procedure_statement: ID
   32                    | ID '(' expression_list ')'

   33 expression_list: expression
   34                | expression_list ',' expression

   35 expression: ID
   36           | INTNUM
   37           | REALNUM
   38           | TRUEE
   39           | FALSEE
   40           | ID '(' expression_list ')'
   41           | '(' expression ')'
   42           | expression unary_operator expression
   43           | NOT expression

   44 unary_operator: '*'
   45               | '+'
   46               | '-'
   47               | '/'
   48               | DIV
   49               | '>'
   50               | '>' '='
   51               | '<'
   52               | '<' '='
   53               | '='
   54               | NEQ
   55               | NOT
   56               | OR
   57               | AND


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 32 40 41
')' (41) 14 32 40 41
'*' (42) 44
'+' (43) 45
',' (44) 3 34
'-' (45) 46
'.' (46) 7
'/' (47) 47
':' (58) 4 12 16 17 23
';' (59) 1 12 13 17 22
'<' (60) 51 52
'=' (61) 23 50 52 53
'>' (62) 49 50
'[' (91) 7 30
']' (93) 7 30
error (256)
PROGRAM (258) 1
VAR (259) 4
REAL (260) 9
INTEGER (261) 8
FUNCTION (262) 12
PROCEDURE (263) 13
WHILE (264) 28
DO (265) 28
BEGINN (266) 18
END (267) 18
IF (268) 26 27
THEN (269) 26 27
ELSE (270) 27
ARRAY (271) 7
OF (272) 7
DIV (273) 48
NOT (274) 43 55
AND (275) 57
OR (276) 56
ALPHA (277)
ID (278) 1 2 3 12 13 29 30 31 32 35 40
INTNUM (279) 7 36
REALNUM (280) 37
NEQ (281) 54
TRUEE (282) 38
FALSEE (283) 39
BOOLEANN (284) 10
IFPREC (285)
Uoperator (286)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
identifier_list (49)
    on left: 2 3, on right: 3 4 16 17
declarations (50)
    on left: 4 5, on right: 1 4
type (51)
    on left: 6 7, on right: 4 16 17
standard_type (52)
    on left: 8 9 10, on right: 6 7 12
subprogram_declarations (53)
    on left: 11, on right: 1
subprogram_head (54)
    on left: 12 13, on right: 11
arguments (55)
    on left: 14 15, on right: 12 13
parameter_list (56)
    on left: 16 17, on right: 14 17
compound_statement (57)
    on left: 18, on right: 1 11 25
optional_statement (58)
    on left: 19 20, on right: 18
statement_list (59)
    on left: 21 22, on right: 19 22
statement (60)
    on left: 23 24 25 26 27 28, on right: 21 22 26 27 28
variable (61)
    on left: 29 30, on right: 23
procedure_statement (62)
    on left: 31 32, on right: 24
expression_list (63)
    on left: 33 34, on right: 32 34 40
expression (64)
    on left: 35 36 37 38 39 40 41 42 43, on right: 23 26 27 28 30 33
    34 41 42 43
unary_operator (65)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57,
    on right: 42


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROGRAM . ID ';' declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: PROGRAM ID . ';' declarations subprogram_declarations compound_statement

    ';'  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: PROGRAM ID ';' . declarations subprogram_declarations compound_statement

    $default  reduce using rule 5 (declarations)

    declarations  go to state 6


state 6

    1 program: PROGRAM ID ';' declarations . subprogram_declarations compound_statement
    4 declarations: declarations . VAR identifier_list ':' type

    VAR        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9

    subprogram_declarations  go to state 10
    subprogram_head          go to state 11


state 7

    4 declarations: declarations VAR . identifier_list ':' type

    ID  shift, and go to state 12

    identifier_list  go to state 13


state 8

   12 subprogram_head: FUNCTION . ID arguments ':' standard_type ';'

    ID  shift, and go to state 14


state 9

   13 subprogram_head: PROCEDURE . ID arguments ';'

    ID  shift, and go to state 15


state 10

    1 program: PROGRAM ID ';' declarations subprogram_declarations . compound_statement

    BEGINN  shift, and go to state 16

    compound_statement  go to state 17


state 11

   11 subprogram_declarations: subprogram_head . compound_statement

    BEGINN  shift, and go to state 16

    compound_statement  go to state 18


state 12

    2 identifier_list: ID .

    $default  reduce using rule 2 (identifier_list)


state 13

    3 identifier_list: identifier_list . ',' ID
    4 declarations: declarations VAR identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 20


state 14

   12 subprogram_head: FUNCTION ID . arguments ':' standard_type ';'

    '('  shift, and go to state 21

    $default  reduce using rule 15 (arguments)

    arguments  go to state 22


state 15

   13 subprogram_head: PROCEDURE ID . arguments ';'

    '('  shift, and go to state 21

    $default  reduce using rule 15 (arguments)

    arguments  go to state 23


state 16

   18 compound_statement: BEGINN . optional_statement END

    WHILE   shift, and go to state 24
    BEGINN  shift, and go to state 16
    IF      shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 20 (optional_statement)

    compound_statement   go to state 27
    optional_statement   go to state 28
    statement_list       go to state 29
    statement            go to state 30
    variable             go to state 31
    procedure_statement  go to state 32


state 17

    1 program: PROGRAM ID ';' declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


state 18

   11 subprogram_declarations: subprogram_head compound_statement .

    $default  reduce using rule 11 (subprogram_declarations)


state 19

    3 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 33


state 20

    4 declarations: declarations VAR identifier_list ':' . type

    REAL      shift, and go to state 34
    INTEGER   shift, and go to state 35
    ARRAY     shift, and go to state 36
    BOOLEANN  shift, and go to state 37

    type           go to state 38
    standard_type  go to state 39


state 21

   14 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 12

    identifier_list  go to state 40
    parameter_list   go to state 41


state 22

   12 subprogram_head: FUNCTION ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 42


state 23

   13 subprogram_head: PROCEDURE ID arguments . ';'

    ';'  shift, and go to state 43


state 24

   28 statement: WHILE . expression DO statement

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 51


state 25

   26 statement: IF . expression THEN statement
   27          | IF . expression THEN statement ELSE statement

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 52


state 26

   29 variable: ID .
   30         | ID . '[' expression ']'
   31 procedure_statement: ID .
   32                    | ID . '(' expression_list ')'

    '['  shift, and go to state 53
    '('  shift, and go to state 54

    ':'       reduce using rule 29 (variable)
    $default  reduce using rule 31 (procedure_statement)


state 27

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


state 28

   18 compound_statement: BEGINN optional_statement . END

    END  shift, and go to state 55


state 29

   19 optional_statement: statement_list .
   22 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 56

    $default  reduce using rule 19 (optional_statement)


state 30

   21 statement_list: statement .

    $default  reduce using rule 21 (statement_list)


state 31

   23 statement: variable . ':' '=' expression

    ':'  shift, and go to state 57


state 32

   24 statement: procedure_statement .

    $default  reduce using rule 24 (statement)


state 33

    3 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 3 (identifier_list)


state 34

    9 standard_type: REAL .

    $default  reduce using rule 9 (standard_type)


state 35

    8 standard_type: INTEGER .

    $default  reduce using rule 8 (standard_type)


state 36

    7 type: ARRAY . '[' INTNUM '.' '.' INTNUM ']' OF standard_type

    '['  shift, and go to state 58


state 37

   10 standard_type: BOOLEANN .

    $default  reduce using rule 10 (standard_type)


state 38

    4 declarations: declarations VAR identifier_list ':' type .

    $default  reduce using rule 4 (declarations)


state 39

    6 type: standard_type .

    $default  reduce using rule 6 (type)


state 40

    3 identifier_list: identifier_list . ',' ID
   16 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 59


state 41

   14 arguments: '(' parameter_list . ')'
   17 parameter_list: parameter_list . ';' identifier_list ':' type

    ';'  shift, and go to state 60
    ')'  shift, and go to state 61


state 42

   12 subprogram_head: FUNCTION ID arguments ':' . standard_type ';'

    REAL      shift, and go to state 34
    INTEGER   shift, and go to state 35
    BOOLEANN  shift, and go to state 37

    standard_type  go to state 62


state 43

   13 subprogram_head: PROCEDURE ID arguments ';' .

    $default  reduce using rule 13 (subprogram_head)


state 44

   43 expression: NOT . expression

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 63


state 45

   35 expression: ID .
   40           | ID . '(' expression_list ')'

    '('  shift, and go to state 64

    $default  reduce using rule 35 (expression)


state 46

   36 expression: INTNUM .

    $default  reduce using rule 36 (expression)


state 47

   37 expression: REALNUM .

    $default  reduce using rule 37 (expression)


state 48

   38 expression: TRUEE .

    $default  reduce using rule 38 (expression)


state 49

   39 expression: FALSEE .

    $default  reduce using rule 39 (expression)


state 50

   41 expression: '(' . expression ')'

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 65


state 51

   28 statement: WHILE expression . DO statement
   42 expression: expression . unary_operator expression

    DO   shift, and go to state 66
    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78

    unary_operator  go to state 79


state 52

   26 statement: IF expression . THEN statement
   27          | IF expression . THEN statement ELSE statement
   42 expression: expression . unary_operator expression

    THEN  shift, and go to state 80
    DIV   shift, and go to state 67
    NOT   shift, and go to state 68
    AND   shift, and go to state 69
    OR    shift, and go to state 70
    NEQ   shift, and go to state 71
    '*'   shift, and go to state 72
    '/'   shift, and go to state 73
    '+'   shift, and go to state 74
    '-'   shift, and go to state 75
    '>'   shift, and go to state 76
    '<'   shift, and go to state 77
    '='   shift, and go to state 78

    unary_operator  go to state 79


state 53

   30 variable: ID '[' . expression ']'

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 81


state 54

   32 procedure_statement: ID '(' . expression_list ')'

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression_list  go to state 82
    expression       go to state 83


state 55

   18 compound_statement: BEGINN optional_statement END .

    $default  reduce using rule 18 (compound_statement)


state 56

   22 statement_list: statement_list ';' . statement

    WHILE   shift, and go to state 24
    BEGINN  shift, and go to state 16
    IF      shift, and go to state 25
    ID      shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 84
    variable             go to state 31
    procedure_statement  go to state 32


state 57

   23 statement: variable ':' . '=' expression

    '='  shift, and go to state 85


state 58

    7 type: ARRAY '[' . INTNUM '.' '.' INTNUM ']' OF standard_type

    INTNUM  shift, and go to state 86


state 59

   16 parameter_list: identifier_list ':' . type

    REAL      shift, and go to state 34
    INTEGER   shift, and go to state 35
    ARRAY     shift, and go to state 36
    BOOLEANN  shift, and go to state 37

    type           go to state 87
    standard_type  go to state 39


state 60

   17 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 12

    identifier_list  go to state 88


state 61

   14 arguments: '(' parameter_list ')' .

    $default  reduce using rule 14 (arguments)


state 62

   12 subprogram_head: FUNCTION ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 89


state 63

   42 expression: expression . unary_operator expression
   43           | NOT expression .

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 43 (expression)

    unary_operator  go to state 79


state 64

   40 expression: ID '(' . expression_list ')'

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression_list  go to state 90
    expression       go to state 83


state 65

   41 expression: '(' expression . ')'
   42           | expression . unary_operator expression

    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    ')'  shift, and go to state 91

    unary_operator  go to state 79


state 66

   28 statement: WHILE expression DO . statement

    WHILE   shift, and go to state 24
    BEGINN  shift, and go to state 16
    IF      shift, and go to state 25
    ID      shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 92
    variable             go to state 31
    procedure_statement  go to state 32


state 67

   48 unary_operator: DIV .

    $default  reduce using rule 48 (unary_operator)


state 68

   55 unary_operator: NOT .

    $default  reduce using rule 55 (unary_operator)


state 69

   57 unary_operator: AND .

    $default  reduce using rule 57 (unary_operator)


state 70

   56 unary_operator: OR .

    $default  reduce using rule 56 (unary_operator)


state 71

   54 unary_operator: NEQ .

    $default  reduce using rule 54 (unary_operator)


state 72

   44 unary_operator: '*' .

    $default  reduce using rule 44 (unary_operator)


state 73

   47 unary_operator: '/' .

    $default  reduce using rule 47 (unary_operator)


state 74

   45 unary_operator: '+' .

    $default  reduce using rule 45 (unary_operator)


state 75

   46 unary_operator: '-' .

    $default  reduce using rule 46 (unary_operator)


state 76

   49 unary_operator: '>' .
   50               | '>' . '='

    '='  shift, and go to state 93

    $default  reduce using rule 49 (unary_operator)


state 77

   51 unary_operator: '<' .
   52               | '<' . '='

    '='  shift, and go to state 94

    $default  reduce using rule 51 (unary_operator)


state 78

   53 unary_operator: '=' .

    $default  reduce using rule 53 (unary_operator)


state 79

   42 expression: expression unary_operator . expression

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 95


state 80

   26 statement: IF expression THEN . statement
   27          | IF expression THEN . statement ELSE statement

    WHILE   shift, and go to state 24
    BEGINN  shift, and go to state 16
    IF      shift, and go to state 25
    ID      shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 96
    variable             go to state 31
    procedure_statement  go to state 32


state 81

   30 variable: ID '[' expression . ']'
   42 expression: expression . unary_operator expression

    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    ']'  shift, and go to state 97

    unary_operator  go to state 79


state 82

   32 procedure_statement: ID '(' expression_list . ')'
   34 expression_list: expression_list . ',' expression

    ','  shift, and go to state 98
    ')'  shift, and go to state 99


state 83

   33 expression_list: expression .
   42 expression: expression . unary_operator expression

    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78

    $default  reduce using rule 33 (expression_list)

    unary_operator  go to state 79


state 84

   22 statement_list: statement_list ';' statement .

    $default  reduce using rule 22 (statement_list)


state 85

   23 statement: variable ':' '=' . expression

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 100


state 86

    7 type: ARRAY '[' INTNUM . '.' '.' INTNUM ']' OF standard_type

    '.'  shift, and go to state 101


state 87

   16 parameter_list: identifier_list ':' type .

    $default  reduce using rule 16 (parameter_list)


state 88

    3 identifier_list: identifier_list . ',' ID
   17 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 102


state 89

   12 subprogram_head: FUNCTION ID arguments ':' standard_type ';' .

    $default  reduce using rule 12 (subprogram_head)


state 90

   34 expression_list: expression_list . ',' expression
   40 expression: ID '(' expression_list . ')'

    ','  shift, and go to state 98
    ')'  shift, and go to state 103


state 91

   41 expression: '(' expression ')' .

    $default  reduce using rule 41 (expression)


state 92

   28 statement: WHILE expression DO statement .

    $default  reduce using rule 28 (statement)


state 93

   50 unary_operator: '>' '=' .

    $default  reduce using rule 50 (unary_operator)


state 94

   52 unary_operator: '<' '=' .

    $default  reduce using rule 52 (unary_operator)


state 95

   42 expression: expression . unary_operator expression
   42           | expression unary_operator expression .

    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78

    $default  reduce using rule 42 (expression)

    unary_operator  go to state 79


state 96

   26 statement: IF expression THEN statement .
   27          | IF expression THEN statement . ELSE statement

    $default  reduce using rule 26 (statement)


state 97

   30 variable: ID '[' expression ']' .

    $default  reduce using rule 30 (variable)


state 98

   34 expression_list: expression_list ',' . expression

    NOT      shift, and go to state 44
    ID       shift, and go to state 45
    INTNUM   shift, and go to state 46
    REALNUM  shift, and go to state 47
    TRUEE    shift, and go to state 48
    FALSEE   shift, and go to state 49
    '('      shift, and go to state 50

    expression  go to state 105


state 99

   32 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 32 (procedure_statement)


state 100

   23 statement: variable ':' '=' expression .
   42 expression: expression . unary_operator expression

    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78

    $default  reduce using rule 23 (statement)

    unary_operator  go to state 79


state 101

    7 type: ARRAY '[' INTNUM '.' . '.' INTNUM ']' OF standard_type

    '.'  shift, and go to state 106


state 102

   17 parameter_list: parameter_list ';' identifier_list ':' . type

    REAL      shift, and go to state 34
    INTEGER   shift, and go to state 35
    ARRAY     shift, and go to state 36
    BOOLEANN  shift, and go to state 37

    type           go to state 107
    standard_type  go to state 39


state 103

   40 expression: ID '(' expression_list ')' .

    $default  reduce using rule 40 (expression)


state 104

   27 statement: IF expression THEN statement ELSE . statement

    WHILE   shift, and go to state 24
    BEGINN  shift, and go to state 16
    IF      shift, and go to state 25
    ID      shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 108
    variable             go to state 31
    procedure_statement  go to state 32


state 105

   34 expression_list: expression_list ',' expression .
   42 expression: expression . unary_operator expression

    DIV  shift, and go to state 67
    NOT  shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    NEQ  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78

    $default  reduce using rule 34 (expression_list)

    unary_operator  go to state 79


state 106

    7 type: ARRAY '[' INTNUM '.' '.' . INTNUM ']' OF standard_type

    INTNUM  shift, and go to state 109


state 107

   17 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 17 (parameter_list)


state 108

   27 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 27 (statement)


state 109

    7 type: ARRAY '[' INTNUM '.' '.' INTNUM . ']' OF standard_type

    ']'  shift, and go to state 110


state 110

    7 type: ARRAY '[' INTNUM '.' '.' INTNUM ']' . OF standard_type

    OF  shift, and go to state 111


state 111

    7 type: ARRAY '[' INTNUM '.' '.' INTNUM ']' OF . standard_type

    REAL      shift, and go to state 34
    INTEGER   shift, and go to state 35
    BOOLEANN  shift, and go to state 37

    standard_type  go to state 112


state 112

    7 type: ARRAY '[' INTNUM '.' '.' INTNUM ']' OF standard_type .

    $default  reduce using rule 7 (type)
